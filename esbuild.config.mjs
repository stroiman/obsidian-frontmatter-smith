import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import CssModulesPlugin from "esbuild-css-modules-plugin";
import manifest from "./manifest.json" with { type: "json" };

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === "production";

const context = await esbuild.context({
  banner: {
    js: banner,
  },
  entryPoints: [
    {
      in: "main.ts",
      out: "main",
    },
    {
      in: "main.css",
      out: "styles",
    },
  ],
  allowOverwrite: true,
  outdir: ".",
  bundle: true,
  plugins: [
    CssModulesPlugin({
      // @see https://github.com/indooorsman/esbuild-css-modules-plugin/blob/main/index.d.ts for more details
      pattern: `${manifest.id}-[hash]-[local]`,
      force: true,
      emitDeclarationFile: true,
      localsConvention: "camelCaseOnly",
      namedExports: true,
      inject: false,
    }),
  ],
  external: [
    "obsidian",
    "electron",
    "@codemirror/autocomplete",
    "@codemirror/collab",
    "@codemirror/commands",
    "@codemirror/language",
    "@codemirror/lint",
    "@codemirror/search",
    "@codemirror/state",
    "@codemirror/view",
    "@lezer/common",
    "@lezer/highlight",
    "@lezer/lr",
    ...builtins,
  ],
  format: "cjs",
  target: "es2018",
  logLevel: "info",
  sourcemap: prod ? false : "inline",
  treeShaking: true,
});

if (prod) {
  await context.rebuild();
  process.exit(0);
} else {
  await context.watch();
}
